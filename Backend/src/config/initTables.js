const { pool } = require('./database');

async function ensureTables() {
  const queries = [
    `CREATE TABLE IF NOT EXISTS distance_measurements (
      id INT AUTO_INCREMENT PRIMARY KEY,
      user_id INT NOT NULL,
      region_id INT NULL,
      distance DECIMAL(18,6) NULL,
      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
      INDEX idx_user (user_id),
      INDEX idx_region (region_id),
      FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
    ) ENGINE=InnoDB`,
    `CREATE TABLE IF NOT EXISTS polygon_drawings (
      id INT AUTO_INCREMENT PRIMARY KEY,
      user_id INT NOT NULL,
      region_id INT NULL,
      name VARCHAR(255) NULL,
      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
      INDEX idx_user (user_id),
      INDEX idx_region (region_id),
      FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
    ) ENGINE=InnoDB`,
    `CREATE TABLE IF NOT EXISTS circle_drawings (
      id INT AUTO_INCREMENT PRIMARY KEY,
      user_id INT NOT NULL,
      region_id INT NULL,
      name VARCHAR(255) NULL,
      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
      INDEX idx_user (user_id),
      INDEX idx_region (region_id),
      FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
    ) ENGINE=InnoDB`,
    `CREATE TABLE IF NOT EXISTS sector_rf_data (
      id INT AUTO_INCREMENT PRIMARY KEY,
      user_id INT NOT NULL,
      region_id INT NULL,
      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
      INDEX idx_user (user_id),
      INDEX idx_region (region_id),
      FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
    ) ENGINE=InnoDB`,
    `CREATE TABLE IF NOT EXISTS infrastructure_items (
      id INT AUTO_INCREMENT PRIMARY KEY,
      user_id INT NOT NULL,
      region_id INT NULL,
      created_by INT NULL,
      item_type ENUM('POP', 'SubPOP', 'Tower', 'Building', 'Equipment', 'Other') DEFAULT 'POP',
      item_name VARCHAR(255) NOT NULL DEFAULT '',
      unique_id VARCHAR(100) NOT NULL DEFAULT '',
      network_id VARCHAR(100) NULL,
      ref_code VARCHAR(100) NULL,
      latitude DECIMAL(10, 8) NOT NULL DEFAULT 0,
      longitude DECIMAL(11, 8) NOT NULL DEFAULT 0,
      height DECIMAL(10, 2) NULL,
      address_street VARCHAR(255) NULL,
      address_city VARCHAR(100) NULL,
      address_state VARCHAR(100) NULL,
      address_pincode VARCHAR(20) NULL,
      contact_name VARCHAR(150) NULL,
      contact_phone VARCHAR(30) NULL,
      contact_email VARCHAR(191) NULL,
      is_rented BOOLEAN DEFAULT FALSE,
      rent_amount DECIMAL(10, 2) NULL,
      agreement_start_date DATE NULL,
      agreement_end_date DATE NULL,
      landlord_name VARCHAR(150) NULL,
      landlord_contact VARCHAR(30) NULL,
      nature_of_business VARCHAR(255) NULL,
      owner VARCHAR(150) NULL,
      structure_type ENUM('Tower', 'Building', 'Ground', 'Rooftop', 'Other') DEFAULT 'Tower',
      ups_availability BOOLEAN DEFAULT FALSE,
      ups_capacity VARCHAR(100) NULL,
      backup_capacity VARCHAR(100) NULL,
      power_source ENUM('Grid', 'Solar', 'Generator', 'Hybrid', 'Other') DEFAULT 'Grid',
      equipment_list JSON NULL,
      connected_to JSON NULL,
      bandwidth VARCHAR(100) NULL,
      status ENUM('Active', 'Inactive', 'Maintenance', 'Planned', 'RFS', 'Damaged') DEFAULT 'Active',
      installation_date DATE NULL,
      maintenance_due_date DATE NULL,
      source ENUM('Manual', 'KML', 'Import', 'API') DEFAULT 'Manual',
      kml_filename VARCHAR(255) NULL,
      notes TEXT NULL,
      properties JSON NULL,
      photos JSON NULL,
      capacity JSON NULL,
      equipment_details JSON NULL,
      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
      updated_at TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
      INDEX idx_user (user_id),
      INDEX idx_region (region_id),
      INDEX idx_created_by (created_by),
      INDEX idx_item_type (item_type),
      INDEX idx_status (status),
      INDEX idx_source (source),
      FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
      FOREIGN KEY (created_by) REFERENCES users(id) ON DELETE SET NULL
    ) ENGINE=InnoDB`,
    `CREATE TABLE IF NOT EXISTS infrastructure_imports (
      id INT AUTO_INCREMENT PRIMARY KEY,
      import_session_id VARCHAR(100) NOT NULL,
      imported_by INT NOT NULL,
      item_type ENUM('POP', 'SubPOP', 'Tower', 'Building', 'Equipment', 'Other') DEFAULT 'POP',
      item_name VARCHAR(255) NOT NULL,
      unique_id VARCHAR(100) NOT NULL,
      network_id VARCHAR(100) NULL,
      ref_code VARCHAR(100) NULL,
      latitude DECIMAL(10, 8) NOT NULL,
      longitude DECIMAL(11, 8) NOT NULL,
      height DECIMAL(10, 2) NULL,
      address_street VARCHAR(255) NULL,
      address_city VARCHAR(100) NULL,
      address_state VARCHAR(100) NULL,
      address_pincode VARCHAR(20) NULL,
      contact_name VARCHAR(150) NULL,
      contact_phone VARCHAR(30) NULL,
      contact_email VARCHAR(191) NULL,
      is_rented BOOLEAN DEFAULT FALSE,
      rent_amount DECIMAL(10, 2) NULL,
      agreement_start_date DATE NULL,
      agreement_end_date DATE NULL,
      landlord_name VARCHAR(150) NULL,
      landlord_contact VARCHAR(30) NULL,
      nature_of_business VARCHAR(255) NULL,
      owner VARCHAR(150) NULL,
      structure_type ENUM('Tower', 'Building', 'Ground', 'Rooftop', 'Other') DEFAULT 'Tower',
      ups_availability BOOLEAN DEFAULT FALSE,
      ups_capacity VARCHAR(100) NULL,
      backup_capacity VARCHAR(100) NULL,
      power_source ENUM('Grid', 'Solar', 'Generator', 'Hybrid', 'Other') DEFAULT 'Grid',
      equipment_list JSON NULL,
      connected_to JSON NULL,
      bandwidth VARCHAR(100) NULL,
      status ENUM('Active', 'Inactive', 'Maintenance', 'Planned', 'RFS', 'Damaged') DEFAULT 'Active',
      installation_date DATE NULL,
      maintenance_due_date DATE NULL,
      source ENUM('Manual', 'KML', 'Import', 'API') DEFAULT 'KML',
      kml_filename VARCHAR(255) NULL,
      notes TEXT NULL,
      properties JSON NULL,
      detected_region_id INT NULL,
      is_selected BOOLEAN DEFAULT TRUE,
      imported_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
      INDEX idx_import_session (import_session_id),
      INDEX idx_imported_by (imported_by),
      INDEX idx_item_type (item_type),
      INDEX idx_detected_region (detected_region_id),
      INDEX idx_imported_at (imported_at),
      FOREIGN KEY (imported_by) REFERENCES users(id) ON DELETE CASCADE,
      FOREIGN KEY (detected_region_id) REFERENCES regions(id) ON DELETE SET NULL
    ) ENGINE=InnoDB`,
    `CREATE TABLE IF NOT EXISTS bookmarks (
      id INT AUTO_INCREMENT PRIMARY KEY,
      user_id INT NOT NULL,
      title VARCHAR(255) NULL,
      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
      INDEX idx_user (user_id),
      FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
    ) ENGINE=InnoDB`,
    `CREATE TABLE IF NOT EXISTS layer_management (
      id INT AUTO_INCREMENT PRIMARY KEY,
      user_id INT NOT NULL,
      name VARCHAR(255) NULL,
      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
      INDEX idx_user (user_id),
      FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
    ) ENGINE=InnoDB`,
    `CREATE TABLE IF NOT EXISTS infrastructure_categories (
      id INT AUTO_INCREMENT PRIMARY KEY,
      name VARCHAR(100) NOT NULL,
      type ENUM('POP', 'SubPOP', 'Tower', 'Building', 'Equipment', 'Other') NOT NULL,
      description TEXT NULL,
      icon VARCHAR(50) NULL,
      color VARCHAR(20) NULL,
      is_active BOOLEAN DEFAULT TRUE,
      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
      updated_at TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
      INDEX idx_type (type),
      INDEX idx_is_active (is_active),
      UNIQUE KEY unique_name_type (name, type)
    ) ENGINE=InnoDB`,
    `CREATE TABLE IF NOT EXISTS infrastructure_audit (
      id INT AUTO_INCREMENT PRIMARY KEY,
      infrastructure_id INT NULL,
      user_id INT NOT NULL,
      action ENUM('CREATE', 'UPDATE', 'DELETE', 'IMPORT', 'EXPORT') NOT NULL,
      old_values JSON NULL,
      new_values JSON NULL,
      ip_address VARCHAR(45) NULL,
      user_agent TEXT NULL,
      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
      INDEX idx_infrastructure (infrastructure_id),
      INDEX idx_user (user_id),
      INDEX idx_action (action),
      INDEX idx_created_at (created_at),
      FOREIGN KEY (infrastructure_id) REFERENCES infrastructure_items(id) ON DELETE SET NULL,
      FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
    ) ENGINE=InnoDB`
  ];

  for (const q of queries) {
    try {
      await pool.query(q);
    } catch (e) {
      // Log but continue; some MySQL instances may not allow FKs if missing parents
      console.warn('Table ensure warning:', e.code || e.message);
    }
  }
  console.log('üõ†Ô∏è Verified core analytics tables (including infrastructure)');
}

module.exports = { ensureTables };